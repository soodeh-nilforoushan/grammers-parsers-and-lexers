Terminals unused in grammar

   SINGLE_QUOTE_KW
   LETTER
   DIGIT
   NEWLINE_KW
   NULL_KW
   WHITESPACE
   COMMENTS
   DOT_KW
   SWITCH_KW


Rules useless in parser due to conflicts

   32 statement: AGAR_KW ebarat_bool ANGAH_KW statement VAGARNA_KW statement

   65 ebarat_bool: zojmoratab AND_KW ANGAH_KW
   66            | zojmoratab OR_KW VAGARNA_KW


Grammar

    0 $accept: program $end

    1 program: PROGRAM_KW SHENASE declarations_list list_ravie MAIN_KW block

    2 declarations_list: declarations
    3                  | declarations_list declarations

    4 declarations: taeen_type declarator_list SEMICOLON_KW

    5 taeen_type: INTEGER_KW
    6           | FLOAT_KW
    7           | CHAR_KW
    8           | BOOLEAN_KW

    9 declarator_list: declarator
   10                | declarator_list COMMA_KW declarator

   11 declarator: dec
   12           | dec ASS_KW meghdar_avalie

   13 dec: SHENASE
   14    | SHENASE UPTO_KW range DOWNTO_KW
   15    | SHENASE UPTO_KW ADADSABET DOWNTO_KW

   16 range: SHENASE TWO_DOTS_KW SHENASE
   17      | ADADSABET TWO_DOTS_KW ADADSABET
   18      | ebarat_riazi TWO_DOTS_KW ebarat_riazi

   19 meghdar_avalie: ebarat_sabet
   20               | LCB_KW list_meghdar_avalie RCB_KW

   21 list_meghdar_avalie: ebarat_sabet COMMA_KW list_meghdar_avalie
   22                    | ebarat_sabet

   23 list_ravie: list_ravie ravie
   24           | /* empty */

   25 ravie: RAVIE_KW SHENASE parameters LCB_KW declarations_list block RCB_KW SEMICOLON_KW

   26 parameters: LP_KW declarations_list RP_KW

   27 block: LCB_KW statement_list RCB_KW

   28 statement_list: statement SEMICOLON_KW
   29               | statement_list statement SEMICOLON_KW

   30 statement: SHENASE ASS_KW ebarat
   31          | AGAR_KW ebarat_bool ANGAH_KW statement
   32          | AGAR_KW ebarat_bool ANGAH_KW statement VAGARNA_KW statement
   33          | DO_KW statement WHILE_KW ebarat_bool
   34          | FOR_KW SHENASE ASS_KW counter DO_KW statement
   35          | GOZINESH_KW ebarat onsor_mored default END_KW
   36          | SHENASE LP_KW arguments_list RP_KW
   37          | SHENASE UPTO_KW ebarat DOWNTO_KW ASS_KW ebarat
   38          | BAZGASHT_KW ebarat
   39          | EXIT_KW WHEN_KW ebarat_bool
   40          | block
   41          | /* empty */

   42 arguments_list: multi_arguments
   43               | /* empty */

   44 multi_arguments: multi_arguments COMMA_KW ebarat
   45                | ebarat

   46 counter: ADADSABET UPTO ADADSABET
   47        | ADADSABET DOWNTO ADADSABET

   48 onsor_mored: MORED_KW ADADSABET COLON_KW block
   49            | onsor_mored MORED_KW ADADSABET COLON_KW block

   50 default: DEFAULT_KW COLON_KW block
   51        | /* empty */

   52 ebarat: ebarat_sabet
   53       | ebarat_bool
   54       | ebarat_riazi
   55       | SHENASE
   56       | SHENASE UPTO_KW ebarat DOWNTO_KW
   57       | SHENASE LP_KW arguments_list RP_KW
   58       | LP_KW ebarat RP_KW

   59 ebarat_sabet: ADADSABET
   60             | REALCONST
   61             | HARF
   62             | BOOLSABET

   63 ebarat_bool: zojmoratab AND_KW
   64            | zojmoratab OR_KW
   65            | zojmoratab AND_KW ANGAH_KW
   66            | zojmoratab OR_KW VAGARNA_KW
   67            | zojmoratab LT_KW
   68            | zojmoratab LE_KW
   69            | zojmoratab GT_KW
   70            | zojmoratab GE_KW
   71            | zojmoratab EQ_KW
   72            | zojmoratab NE_KW
   73            | ebarat NAGHIZ_KW

   74 ebarat_riazi: zojmoratab PLUS_KW
   75             | zojmoratab MINUS_KW
   76             | zojmoratab MUL_KW
   77             | zojmoratab DIV_KW
   78             | zojmoratab MOD_KW
   79             | MINUS_KW ebarat

   80 zojmoratab: LP_KW ebarat COMMA_KW ebarat RP_KW


Terminals, with rules where they appear

$end (0) 0
error (256)
UPTO (258) 46
DOWNTO (259) 47
EXIT_KW (260) 39
SINGLE_QUOTE_KW (261)
BOOLSABET (262) 62
LETTER (263)
DIGIT (264)
SHENASE (265) 1 13 14 15 16 25 30 34 36 37 55 56 57
ADADSABET (266) 15 17 46 47 48 49 59
REALCONST (267) 60
NEWLINE_KW (268)
NULL_KW (269)
HARF (270) 61
WHITESPACE (271)
COMMENTS (272)
PROGRAM_KW (273) 1
MAIN_KW (274) 1
INTEGER_KW (275) 5
FLOAT_KW (276) 6
CHAR_KW (277) 7
BOOLEAN_KW (278) 8
TWO_DOTS_KW (279) 16 17 18
DOT_KW (280)
RAVIE_KW (281) 25
AGAR_KW (282) 31 32
ANGAH_KW (283) 31 32 65
VAGARNA_KW (284) 32 66
DO_KW (285) 33 34
WHILE_KW (286) 33
WHEN_KW (287) 39
FOR_KW (288) 34
SWITCH_KW (289)
GOZINESH_KW (290) 35
END_KW (291) 35
BAZGASHT_KW (292) 38
UPTO_KW (293) 14 15 37 56
DOWNTO_KW (294) 14 15 37 56
LP_KW (295) 26 36 57 58 80
RP_KW (296) 26 36 57 58 80
LCB_KW (297) 20 25 27
RCB_KW (298) 20 25 27
SEMICOLON_KW (299) 4 25 28 29
COLON_KW (300) 48 49 50
COMMA_KW (301) 10 21 44 80
ASS_KW (302) 12 30 34 37
MORED_KW (303) 48 49
AND_KW (304) 63 65
OR_KW (305) 64 66
NAGHIZ_KW (306) 73
DEFAULT_KW (307) 50
PLUS_KW (308) 74
MINUS_KW (309) 75 79
MUL_KW (310) 76
DIV_KW (311) 77
MOD_KW (312) 78
EQ_KW (313) 71
NE_KW (314) 72
LE_KW (315) 68
LT_KW (316) 67
GE_KW (317) 70
GT_KW (318) 69


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1, on right: 0
declarations_list (66)
    on left: 2 3, on right: 1 3 25 26
declarations (67)
    on left: 4, on right: 2 3
taeen_type (68)
    on left: 5 6 7 8, on right: 4
declarator_list (69)
    on left: 9 10, on right: 4 10
declarator (70)
    on left: 11 12, on right: 9 10
dec (71)
    on left: 13 14 15, on right: 11 12
range (72)
    on left: 16 17 18, on right: 14
meghdar_avalie (73)
    on left: 19 20, on right: 12
list_meghdar_avalie (74)
    on left: 21 22, on right: 20 21
list_ravie (75)
    on left: 23 24, on right: 1 23
ravie (76)
    on left: 25, on right: 23
parameters (77)
    on left: 26, on right: 25
block (78)
    on left: 27, on right: 1 25 40 48 49 50
statement_list (79)
    on left: 28 29, on right: 27 29
statement (80)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41, on right: 28 29 31
    32 33 34
arguments_list (81)
    on left: 42 43, on right: 36 57
multi_arguments (82)
    on left: 44 45, on right: 42 44
counter (83)
    on left: 46 47, on right: 34
onsor_mored (84)
    on left: 48 49, on right: 35 49
default (85)
    on left: 50 51, on right: 35
ebarat (86)
    on left: 52 53 54 55 56 57 58, on right: 30 35 37 38 44 45 56 58
    73 79 80
ebarat_sabet (87)
    on left: 59 60 61 62, on right: 19 21 22 52
ebarat_bool (88)
    on left: 63 64 65 66 67 68 69 70 71 72 73, on right: 31 32 33 39
    53
ebarat_riazi (89)
    on left: 74 75 76 77 78 79, on right: 18 54
zojmoratab (90)
    on left: 80, on right: 63 64 65 66 67 68 69 70 71 72 74 75 76 77
    78


state 0

    0 $accept: . program $end

    PROGRAM_KW  shift, and go to state 1

    program  go to state 2


state 1

    1 program: PROGRAM_KW . SHENASE declarations_list list_ravie MAIN_KW block

    SHENASE  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: PROGRAM_KW SHENASE . declarations_list list_ravie MAIN_KW block

    INTEGER_KW  shift, and go to state 5
    FLOAT_KW    shift, and go to state 6
    CHAR_KW     shift, and go to state 7
    BOOLEAN_KW  shift, and go to state 8

    declarations_list  go to state 9
    declarations       go to state 10
    taeen_type         go to state 11


state 4

    0 $accept: program $end .

    $default  accept


state 5

    5 taeen_type: INTEGER_KW .

    $default  reduce using rule 5 (taeen_type)


state 6

    6 taeen_type: FLOAT_KW .

    $default  reduce using rule 6 (taeen_type)


state 7

    7 taeen_type: CHAR_KW .

    $default  reduce using rule 7 (taeen_type)


state 8

    8 taeen_type: BOOLEAN_KW .

    $default  reduce using rule 8 (taeen_type)


state 9

    1 program: PROGRAM_KW SHENASE declarations_list . list_ravie MAIN_KW block
    3 declarations_list: declarations_list . declarations

    INTEGER_KW  shift, and go to state 5
    FLOAT_KW    shift, and go to state 6
    CHAR_KW     shift, and go to state 7
    BOOLEAN_KW  shift, and go to state 8

    $default  reduce using rule 24 (list_ravie)

    declarations  go to state 12
    taeen_type    go to state 11
    list_ravie    go to state 13


state 10

    2 declarations_list: declarations .

    $default  reduce using rule 2 (declarations_list)


state 11

    4 declarations: taeen_type . declarator_list SEMICOLON_KW

    SHENASE  shift, and go to state 14

    declarator_list  go to state 15
    declarator       go to state 16
    dec              go to state 17


state 12

    3 declarations_list: declarations_list declarations .

    $default  reduce using rule 3 (declarations_list)


state 13

    1 program: PROGRAM_KW SHENASE declarations_list list_ravie . MAIN_KW block
   23 list_ravie: list_ravie . ravie

    MAIN_KW   shift, and go to state 18
    RAVIE_KW  shift, and go to state 19

    ravie  go to state 20


state 14

   13 dec: SHENASE .
   14    | SHENASE . UPTO_KW range DOWNTO_KW
   15    | SHENASE . UPTO_KW ADADSABET DOWNTO_KW

    UPTO_KW  shift, and go to state 21

    $default  reduce using rule 13 (dec)


state 15

    4 declarations: taeen_type declarator_list . SEMICOLON_KW
   10 declarator_list: declarator_list . COMMA_KW declarator

    SEMICOLON_KW  shift, and go to state 22
    COMMA_KW      shift, and go to state 23


state 16

    9 declarator_list: declarator .

    $default  reduce using rule 9 (declarator_list)


state 17

   11 declarator: dec .
   12           | dec . ASS_KW meghdar_avalie

    ASS_KW  shift, and go to state 24

    $default  reduce using rule 11 (declarator)


state 18

    1 program: PROGRAM_KW SHENASE declarations_list list_ravie MAIN_KW . block

    LCB_KW  shift, and go to state 25

    block  go to state 26


state 19

   25 ravie: RAVIE_KW . SHENASE parameters LCB_KW declarations_list block RCB_KW SEMICOLON_KW

    SHENASE  shift, and go to state 27


state 20

   23 list_ravie: list_ravie ravie .

    $default  reduce using rule 23 (list_ravie)


state 21

   14 dec: SHENASE UPTO_KW . range DOWNTO_KW
   15    | SHENASE UPTO_KW . ADADSABET DOWNTO_KW

    SHENASE    shift, and go to state 28
    ADADSABET  shift, and go to state 29
    LP_KW      shift, and go to state 30
    MINUS_KW   shift, and go to state 31

    range         go to state 32
    ebarat_riazi  go to state 33
    zojmoratab    go to state 34


state 22

    4 declarations: taeen_type declarator_list SEMICOLON_KW .

    $default  reduce using rule 4 (declarations)


state 23

   10 declarator_list: declarator_list COMMA_KW . declarator

    SHENASE  shift, and go to state 14

    declarator  go to state 35
    dec         go to state 17


state 24

   12 declarator: dec ASS_KW . meghdar_avalie

    BOOLSABET  shift, and go to state 36
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LCB_KW     shift, and go to state 40

    meghdar_avalie  go to state 41
    ebarat_sabet    go to state 42


state 25

   27 block: LCB_KW . statement_list RCB_KW

    EXIT_KW      shift, and go to state 43
    SHENASE      shift, and go to state 44
    AGAR_KW      shift, and go to state 45
    DO_KW        shift, and go to state 46
    FOR_KW       shift, and go to state 47
    GOZINESH_KW  shift, and go to state 48
    BAZGASHT_KW  shift, and go to state 49
    LCB_KW       shift, and go to state 25

    $default  reduce using rule 41 (statement)

    block           go to state 50
    statement_list  go to state 51
    statement       go to state 52


state 26

    1 program: PROGRAM_KW SHENASE declarations_list list_ravie MAIN_KW block .

    $default  reduce using rule 1 (program)


state 27

   25 ravie: RAVIE_KW SHENASE . parameters LCB_KW declarations_list block RCB_KW SEMICOLON_KW

    LP_KW  shift, and go to state 53

    parameters  go to state 54


state 28

   16 range: SHENASE . TWO_DOTS_KW SHENASE

    TWO_DOTS_KW  shift, and go to state 55


state 29

   15 dec: SHENASE UPTO_KW ADADSABET . DOWNTO_KW
   17 range: ADADSABET . TWO_DOTS_KW ADADSABET

    TWO_DOTS_KW  shift, and go to state 56
    DOWNTO_KW    shift, and go to state 57


state 30

   80 zojmoratab: LP_KW . ebarat COMMA_KW ebarat RP_KW

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 60
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 31

   79 ebarat_riazi: MINUS_KW . ebarat

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 65
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 32

   14 dec: SHENASE UPTO_KW range . DOWNTO_KW

    DOWNTO_KW  shift, and go to state 66


state 33

   18 range: ebarat_riazi . TWO_DOTS_KW ebarat_riazi

    TWO_DOTS_KW  shift, and go to state 67


state 34

   74 ebarat_riazi: zojmoratab . PLUS_KW
   75             | zojmoratab . MINUS_KW
   76             | zojmoratab . MUL_KW
   77             | zojmoratab . DIV_KW
   78             | zojmoratab . MOD_KW

    PLUS_KW   shift, and go to state 68
    MINUS_KW  shift, and go to state 69
    MUL_KW    shift, and go to state 70
    DIV_KW    shift, and go to state 71
    MOD_KW    shift, and go to state 72


state 35

   10 declarator_list: declarator_list COMMA_KW declarator .

    $default  reduce using rule 10 (declarator_list)


state 36

   62 ebarat_sabet: BOOLSABET .

    $default  reduce using rule 62 (ebarat_sabet)


state 37

   59 ebarat_sabet: ADADSABET .

    $default  reduce using rule 59 (ebarat_sabet)


state 38

   60 ebarat_sabet: REALCONST .

    $default  reduce using rule 60 (ebarat_sabet)


state 39

   61 ebarat_sabet: HARF .

    $default  reduce using rule 61 (ebarat_sabet)


state 40

   20 meghdar_avalie: LCB_KW . list_meghdar_avalie RCB_KW

    BOOLSABET  shift, and go to state 36
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39

    list_meghdar_avalie  go to state 73
    ebarat_sabet         go to state 74


state 41

   12 declarator: dec ASS_KW meghdar_avalie .

    $default  reduce using rule 12 (declarator)


state 42

   19 meghdar_avalie: ebarat_sabet .

    $default  reduce using rule 19 (meghdar_avalie)


state 43

   39 statement: EXIT_KW . WHEN_KW ebarat_bool

    WHEN_KW  shift, and go to state 75


state 44

   30 statement: SHENASE . ASS_KW ebarat
   36          | SHENASE . LP_KW arguments_list RP_KW
   37          | SHENASE . UPTO_KW ebarat DOWNTO_KW ASS_KW ebarat

    UPTO_KW  shift, and go to state 76
    LP_KW    shift, and go to state 77
    ASS_KW   shift, and go to state 78


state 45

   31 statement: AGAR_KW . ebarat_bool ANGAH_KW statement
   32          | AGAR_KW . ebarat_bool ANGAH_KW statement VAGARNA_KW statement

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 79
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 80
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 46

   33 statement: DO_KW . statement WHILE_KW ebarat_bool

    EXIT_KW      shift, and go to state 43
    SHENASE      shift, and go to state 44
    AGAR_KW      shift, and go to state 45
    DO_KW        shift, and go to state 46
    FOR_KW       shift, and go to state 47
    GOZINESH_KW  shift, and go to state 48
    BAZGASHT_KW  shift, and go to state 49
    LCB_KW       shift, and go to state 25

    $default  reduce using rule 41 (statement)

    block      go to state 50
    statement  go to state 81


state 47

   34 statement: FOR_KW . SHENASE ASS_KW counter DO_KW statement

    SHENASE  shift, and go to state 82


state 48

   35 statement: GOZINESH_KW . ebarat onsor_mored default END_KW

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 83
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 49

   38 statement: BAZGASHT_KW . ebarat

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 84
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 50

   40 statement: block .

    $default  reduce using rule 40 (statement)


state 51

   27 block: LCB_KW statement_list . RCB_KW
   29 statement_list: statement_list . statement SEMICOLON_KW

    EXIT_KW      shift, and go to state 43
    SHENASE      shift, and go to state 44
    AGAR_KW      shift, and go to state 45
    DO_KW        shift, and go to state 46
    FOR_KW       shift, and go to state 47
    GOZINESH_KW  shift, and go to state 48
    BAZGASHT_KW  shift, and go to state 49
    LCB_KW       shift, and go to state 25
    RCB_KW       shift, and go to state 85

    $default  reduce using rule 41 (statement)

    block      go to state 50
    statement  go to state 86


state 52

   28 statement_list: statement . SEMICOLON_KW

    SEMICOLON_KW  shift, and go to state 87


state 53

   26 parameters: LP_KW . declarations_list RP_KW

    INTEGER_KW  shift, and go to state 5
    FLOAT_KW    shift, and go to state 6
    CHAR_KW     shift, and go to state 7
    BOOLEAN_KW  shift, and go to state 8

    declarations_list  go to state 88
    declarations       go to state 10
    taeen_type         go to state 11


state 54

   25 ravie: RAVIE_KW SHENASE parameters . LCB_KW declarations_list block RCB_KW SEMICOLON_KW

    LCB_KW  shift, and go to state 89


state 55

   16 range: SHENASE TWO_DOTS_KW . SHENASE

    SHENASE  shift, and go to state 90


state 56

   17 range: ADADSABET TWO_DOTS_KW . ADADSABET

    ADADSABET  shift, and go to state 91


state 57

   15 dec: SHENASE UPTO_KW ADADSABET DOWNTO_KW .

    $default  reduce using rule 15 (dec)


state 58

   55 ebarat: SHENASE .
   56       | SHENASE . UPTO_KW ebarat DOWNTO_KW
   57       | SHENASE . LP_KW arguments_list RP_KW

    UPTO_KW  shift, and go to state 92
    LP_KW    shift, and go to state 93

    $default  reduce using rule 55 (ebarat)


state 59

   58 ebarat: LP_KW . ebarat RP_KW
   80 zojmoratab: LP_KW . ebarat COMMA_KW ebarat RP_KW

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 94
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 60

   73 ebarat_bool: ebarat . NAGHIZ_KW
   80 zojmoratab: LP_KW ebarat . COMMA_KW ebarat RP_KW

    COMMA_KW   shift, and go to state 95
    NAGHIZ_KW  shift, and go to state 96


state 61

   52 ebarat: ebarat_sabet .

    $default  reduce using rule 52 (ebarat)


state 62

   53 ebarat: ebarat_bool .

    $default  reduce using rule 53 (ebarat)


state 63

   54 ebarat: ebarat_riazi .

    $default  reduce using rule 54 (ebarat)


state 64

   63 ebarat_bool: zojmoratab . AND_KW
   64            | zojmoratab . OR_KW
   65            | zojmoratab . AND_KW ANGAH_KW
   66            | zojmoratab . OR_KW VAGARNA_KW
   67            | zojmoratab . LT_KW
   68            | zojmoratab . LE_KW
   69            | zojmoratab . GT_KW
   70            | zojmoratab . GE_KW
   71            | zojmoratab . EQ_KW
   72            | zojmoratab . NE_KW
   74 ebarat_riazi: zojmoratab . PLUS_KW
   75             | zojmoratab . MINUS_KW
   76             | zojmoratab . MUL_KW
   77             | zojmoratab . DIV_KW
   78             | zojmoratab . MOD_KW

    AND_KW    shift, and go to state 97
    OR_KW     shift, and go to state 98
    PLUS_KW   shift, and go to state 68
    MINUS_KW  shift, and go to state 69
    MUL_KW    shift, and go to state 70
    DIV_KW    shift, and go to state 71
    MOD_KW    shift, and go to state 72
    EQ_KW     shift, and go to state 99
    NE_KW     shift, and go to state 100
    LE_KW     shift, and go to state 101
    LT_KW     shift, and go to state 102
    GE_KW     shift, and go to state 103
    GT_KW     shift, and go to state 104


state 65

   73 ebarat_bool: ebarat . NAGHIZ_KW
   79 ebarat_riazi: MINUS_KW ebarat .

    NAGHIZ_KW  shift, and go to state 96

    $default  reduce using rule 79 (ebarat_riazi)


state 66

   14 dec: SHENASE UPTO_KW range DOWNTO_KW .

    $default  reduce using rule 14 (dec)


state 67

   18 range: ebarat_riazi TWO_DOTS_KW . ebarat_riazi

    LP_KW     shift, and go to state 30
    MINUS_KW  shift, and go to state 31

    ebarat_riazi  go to state 105
    zojmoratab    go to state 34


state 68

   74 ebarat_riazi: zojmoratab PLUS_KW .

    $default  reduce using rule 74 (ebarat_riazi)


state 69

   75 ebarat_riazi: zojmoratab MINUS_KW .

    $default  reduce using rule 75 (ebarat_riazi)


state 70

   76 ebarat_riazi: zojmoratab MUL_KW .

    $default  reduce using rule 76 (ebarat_riazi)


state 71

   77 ebarat_riazi: zojmoratab DIV_KW .

    $default  reduce using rule 77 (ebarat_riazi)


state 72

   78 ebarat_riazi: zojmoratab MOD_KW .

    $default  reduce using rule 78 (ebarat_riazi)


state 73

   20 meghdar_avalie: LCB_KW list_meghdar_avalie . RCB_KW

    RCB_KW  shift, and go to state 106


state 74

   21 list_meghdar_avalie: ebarat_sabet . COMMA_KW list_meghdar_avalie
   22                    | ebarat_sabet .

    COMMA_KW  shift, and go to state 107

    $default  reduce using rule 22 (list_meghdar_avalie)


state 75

   39 statement: EXIT_KW WHEN_KW . ebarat_bool

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 79
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 108
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 76

   37 statement: SHENASE UPTO_KW . ebarat DOWNTO_KW ASS_KW ebarat

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 109
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 77

   36 statement: SHENASE LP_KW . arguments_list RP_KW

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    $default  reduce using rule 43 (arguments_list)

    arguments_list   go to state 110
    multi_arguments  go to state 111
    ebarat           go to state 112
    ebarat_sabet     go to state 61
    ebarat_bool      go to state 62
    ebarat_riazi     go to state 63
    zojmoratab       go to state 64


state 78

   30 statement: SHENASE ASS_KW . ebarat

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 113
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 79

   73 ebarat_bool: ebarat . NAGHIZ_KW

    NAGHIZ_KW  shift, and go to state 96


state 80

   31 statement: AGAR_KW ebarat_bool . ANGAH_KW statement
   32          | AGAR_KW ebarat_bool . ANGAH_KW statement VAGARNA_KW statement
   53 ebarat: ebarat_bool .

    ANGAH_KW  shift, and go to state 114

    $default  reduce using rule 53 (ebarat)


state 81

   33 statement: DO_KW statement . WHILE_KW ebarat_bool

    WHILE_KW  shift, and go to state 115


state 82

   34 statement: FOR_KW SHENASE . ASS_KW counter DO_KW statement

    ASS_KW  shift, and go to state 116


state 83

   35 statement: GOZINESH_KW ebarat . onsor_mored default END_KW
   73 ebarat_bool: ebarat . NAGHIZ_KW

    MORED_KW   shift, and go to state 117
    NAGHIZ_KW  shift, and go to state 96

    onsor_mored  go to state 118


state 84

   38 statement: BAZGASHT_KW ebarat .
   73 ebarat_bool: ebarat . NAGHIZ_KW

    NAGHIZ_KW  shift, and go to state 96

    $default  reduce using rule 38 (statement)


state 85

   27 block: LCB_KW statement_list RCB_KW .

    $default  reduce using rule 27 (block)


state 86

   29 statement_list: statement_list statement . SEMICOLON_KW

    SEMICOLON_KW  shift, and go to state 119


state 87

   28 statement_list: statement SEMICOLON_KW .

    $default  reduce using rule 28 (statement_list)


state 88

    3 declarations_list: declarations_list . declarations
   26 parameters: LP_KW declarations_list . RP_KW

    INTEGER_KW  shift, and go to state 5
    FLOAT_KW    shift, and go to state 6
    CHAR_KW     shift, and go to state 7
    BOOLEAN_KW  shift, and go to state 8
    RP_KW       shift, and go to state 120

    declarations  go to state 12
    taeen_type    go to state 11


state 89

   25 ravie: RAVIE_KW SHENASE parameters LCB_KW . declarations_list block RCB_KW SEMICOLON_KW

    INTEGER_KW  shift, and go to state 5
    FLOAT_KW    shift, and go to state 6
    CHAR_KW     shift, and go to state 7
    BOOLEAN_KW  shift, and go to state 8

    declarations_list  go to state 121
    declarations       go to state 10
    taeen_type         go to state 11


state 90

   16 range: SHENASE TWO_DOTS_KW SHENASE .

    $default  reduce using rule 16 (range)


state 91

   17 range: ADADSABET TWO_DOTS_KW ADADSABET .

    $default  reduce using rule 17 (range)


state 92

   56 ebarat: SHENASE UPTO_KW . ebarat DOWNTO_KW

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 122
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 93

   57 ebarat: SHENASE LP_KW . arguments_list RP_KW

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    $default  reduce using rule 43 (arguments_list)

    arguments_list   go to state 123
    multi_arguments  go to state 111
    ebarat           go to state 112
    ebarat_sabet     go to state 61
    ebarat_bool      go to state 62
    ebarat_riazi     go to state 63
    zojmoratab       go to state 64


state 94

   58 ebarat: LP_KW ebarat . RP_KW
   73 ebarat_bool: ebarat . NAGHIZ_KW
   80 zojmoratab: LP_KW ebarat . COMMA_KW ebarat RP_KW

    RP_KW      shift, and go to state 124
    COMMA_KW   shift, and go to state 95
    NAGHIZ_KW  shift, and go to state 96


state 95

   80 zojmoratab: LP_KW ebarat COMMA_KW . ebarat RP_KW

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 125
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 96

   73 ebarat_bool: ebarat NAGHIZ_KW .

    $default  reduce using rule 73 (ebarat_bool)


state 97

   63 ebarat_bool: zojmoratab AND_KW .
   65            | zojmoratab AND_KW . ANGAH_KW

    $default  reduce using rule 63 (ebarat_bool)


state 98

   64 ebarat_bool: zojmoratab OR_KW .
   66            | zojmoratab OR_KW . VAGARNA_KW

    $default  reduce using rule 64 (ebarat_bool)


state 99

   71 ebarat_bool: zojmoratab EQ_KW .

    $default  reduce using rule 71 (ebarat_bool)


state 100

   72 ebarat_bool: zojmoratab NE_KW .

    $default  reduce using rule 72 (ebarat_bool)


state 101

   68 ebarat_bool: zojmoratab LE_KW .

    $default  reduce using rule 68 (ebarat_bool)


state 102

   67 ebarat_bool: zojmoratab LT_KW .

    $default  reduce using rule 67 (ebarat_bool)


state 103

   70 ebarat_bool: zojmoratab GE_KW .

    $default  reduce using rule 70 (ebarat_bool)


state 104

   69 ebarat_bool: zojmoratab GT_KW .

    $default  reduce using rule 69 (ebarat_bool)


state 105

   18 range: ebarat_riazi TWO_DOTS_KW ebarat_riazi .

    $default  reduce using rule 18 (range)


state 106

   20 meghdar_avalie: LCB_KW list_meghdar_avalie RCB_KW .

    $default  reduce using rule 20 (meghdar_avalie)


state 107

   21 list_meghdar_avalie: ebarat_sabet COMMA_KW . list_meghdar_avalie

    BOOLSABET  shift, and go to state 36
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39

    list_meghdar_avalie  go to state 126
    ebarat_sabet         go to state 74


state 108

   39 statement: EXIT_KW WHEN_KW ebarat_bool .
   53 ebarat: ebarat_bool .

    NAGHIZ_KW  reduce using rule 53 (ebarat)
    $default   reduce using rule 39 (statement)


state 109

   37 statement: SHENASE UPTO_KW ebarat . DOWNTO_KW ASS_KW ebarat
   73 ebarat_bool: ebarat . NAGHIZ_KW

    DOWNTO_KW  shift, and go to state 127
    NAGHIZ_KW  shift, and go to state 96


state 110

   36 statement: SHENASE LP_KW arguments_list . RP_KW

    RP_KW  shift, and go to state 128


state 111

   42 arguments_list: multi_arguments .
   44 multi_arguments: multi_arguments . COMMA_KW ebarat

    COMMA_KW  shift, and go to state 129

    $default  reduce using rule 42 (arguments_list)


state 112

   45 multi_arguments: ebarat .
   73 ebarat_bool: ebarat . NAGHIZ_KW

    NAGHIZ_KW  shift, and go to state 96

    $default  reduce using rule 45 (multi_arguments)


state 113

   30 statement: SHENASE ASS_KW ebarat .
   73 ebarat_bool: ebarat . NAGHIZ_KW

    NAGHIZ_KW  shift, and go to state 96

    $default  reduce using rule 30 (statement)


state 114

   31 statement: AGAR_KW ebarat_bool ANGAH_KW . statement
   32          | AGAR_KW ebarat_bool ANGAH_KW . statement VAGARNA_KW statement

    EXIT_KW      shift, and go to state 43
    SHENASE      shift, and go to state 44
    AGAR_KW      shift, and go to state 45
    DO_KW        shift, and go to state 46
    FOR_KW       shift, and go to state 47
    GOZINESH_KW  shift, and go to state 48
    BAZGASHT_KW  shift, and go to state 49
    LCB_KW       shift, and go to state 25

    $default  reduce using rule 41 (statement)

    block      go to state 50
    statement  go to state 130


state 115

   33 statement: DO_KW statement WHILE_KW . ebarat_bool

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 79
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 131
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 116

   34 statement: FOR_KW SHENASE ASS_KW . counter DO_KW statement

    ADADSABET  shift, and go to state 132

    counter  go to state 133


state 117

   48 onsor_mored: MORED_KW . ADADSABET COLON_KW block

    ADADSABET  shift, and go to state 134


state 118

   35 statement: GOZINESH_KW ebarat onsor_mored . default END_KW
   49 onsor_mored: onsor_mored . MORED_KW ADADSABET COLON_KW block

    MORED_KW    shift, and go to state 135
    DEFAULT_KW  shift, and go to state 136

    $default  reduce using rule 51 (default)

    default  go to state 137


state 119

   29 statement_list: statement_list statement SEMICOLON_KW .

    $default  reduce using rule 29 (statement_list)


state 120

   26 parameters: LP_KW declarations_list RP_KW .

    $default  reduce using rule 26 (parameters)


state 121

    3 declarations_list: declarations_list . declarations
   25 ravie: RAVIE_KW SHENASE parameters LCB_KW declarations_list . block RCB_KW SEMICOLON_KW

    INTEGER_KW  shift, and go to state 5
    FLOAT_KW    shift, and go to state 6
    CHAR_KW     shift, and go to state 7
    BOOLEAN_KW  shift, and go to state 8
    LCB_KW      shift, and go to state 25

    declarations  go to state 12
    taeen_type    go to state 11
    block         go to state 138


state 122

   56 ebarat: SHENASE UPTO_KW ebarat . DOWNTO_KW
   73 ebarat_bool: ebarat . NAGHIZ_KW

    DOWNTO_KW  shift, and go to state 139
    NAGHIZ_KW  shift, and go to state 96


state 123

   57 ebarat: SHENASE LP_KW arguments_list . RP_KW

    RP_KW  shift, and go to state 140


state 124

   58 ebarat: LP_KW ebarat RP_KW .

    $default  reduce using rule 58 (ebarat)


state 125

   73 ebarat_bool: ebarat . NAGHIZ_KW
   80 zojmoratab: LP_KW ebarat COMMA_KW ebarat . RP_KW

    RP_KW      shift, and go to state 141
    NAGHIZ_KW  shift, and go to state 96


state 126

   21 list_meghdar_avalie: ebarat_sabet COMMA_KW list_meghdar_avalie .

    $default  reduce using rule 21 (list_meghdar_avalie)


state 127

   37 statement: SHENASE UPTO_KW ebarat DOWNTO_KW . ASS_KW ebarat

    ASS_KW  shift, and go to state 142


state 128

   36 statement: SHENASE LP_KW arguments_list RP_KW .

    $default  reduce using rule 36 (statement)


state 129

   44 multi_arguments: multi_arguments COMMA_KW . ebarat

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 143
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 130

   31 statement: AGAR_KW ebarat_bool ANGAH_KW statement .
   32          | AGAR_KW ebarat_bool ANGAH_KW statement . VAGARNA_KW statement

    $default  reduce using rule 31 (statement)


state 131

   33 statement: DO_KW statement WHILE_KW ebarat_bool .
   53 ebarat: ebarat_bool .

    NAGHIZ_KW  reduce using rule 53 (ebarat)
    $default   reduce using rule 33 (statement)


state 132

   46 counter: ADADSABET . UPTO ADADSABET
   47        | ADADSABET . DOWNTO ADADSABET

    UPTO    shift, and go to state 144
    DOWNTO  shift, and go to state 145


state 133

   34 statement: FOR_KW SHENASE ASS_KW counter . DO_KW statement

    DO_KW  shift, and go to state 146


state 134

   48 onsor_mored: MORED_KW ADADSABET . COLON_KW block

    COLON_KW  shift, and go to state 147


state 135

   49 onsor_mored: onsor_mored MORED_KW . ADADSABET COLON_KW block

    ADADSABET  shift, and go to state 148


state 136

   50 default: DEFAULT_KW . COLON_KW block

    COLON_KW  shift, and go to state 149


state 137

   35 statement: GOZINESH_KW ebarat onsor_mored default . END_KW

    END_KW  shift, and go to state 150


state 138

   25 ravie: RAVIE_KW SHENASE parameters LCB_KW declarations_list block . RCB_KW SEMICOLON_KW

    RCB_KW  shift, and go to state 151


state 139

   56 ebarat: SHENASE UPTO_KW ebarat DOWNTO_KW .

    $default  reduce using rule 56 (ebarat)


state 140

   57 ebarat: SHENASE LP_KW arguments_list RP_KW .

    $default  reduce using rule 57 (ebarat)


state 141

   80 zojmoratab: LP_KW ebarat COMMA_KW ebarat RP_KW .

    $default  reduce using rule 80 (zojmoratab)


state 142

   37 statement: SHENASE UPTO_KW ebarat DOWNTO_KW ASS_KW . ebarat

    BOOLSABET  shift, and go to state 36
    SHENASE    shift, and go to state 58
    ADADSABET  shift, and go to state 37
    REALCONST  shift, and go to state 38
    HARF       shift, and go to state 39
    LP_KW      shift, and go to state 59
    MINUS_KW   shift, and go to state 31

    ebarat        go to state 152
    ebarat_sabet  go to state 61
    ebarat_bool   go to state 62
    ebarat_riazi  go to state 63
    zojmoratab    go to state 64


state 143

   44 multi_arguments: multi_arguments COMMA_KW ebarat .
   73 ebarat_bool: ebarat . NAGHIZ_KW

    NAGHIZ_KW  shift, and go to state 96

    $default  reduce using rule 44 (multi_arguments)


state 144

   46 counter: ADADSABET UPTO . ADADSABET

    ADADSABET  shift, and go to state 153


state 145

   47 counter: ADADSABET DOWNTO . ADADSABET

    ADADSABET  shift, and go to state 154


state 146

   34 statement: FOR_KW SHENASE ASS_KW counter DO_KW . statement

    EXIT_KW      shift, and go to state 43
    SHENASE      shift, and go to state 44
    AGAR_KW      shift, and go to state 45
    DO_KW        shift, and go to state 46
    FOR_KW       shift, and go to state 47
    GOZINESH_KW  shift, and go to state 48
    BAZGASHT_KW  shift, and go to state 49
    LCB_KW       shift, and go to state 25

    $default  reduce using rule 41 (statement)

    block      go to state 50
    statement  go to state 155


state 147

   48 onsor_mored: MORED_KW ADADSABET COLON_KW . block

    LCB_KW  shift, and go to state 25

    block  go to state 156


state 148

   49 onsor_mored: onsor_mored MORED_KW ADADSABET . COLON_KW block

    COLON_KW  shift, and go to state 157


state 149

   50 default: DEFAULT_KW COLON_KW . block

    LCB_KW  shift, and go to state 25

    block  go to state 158


state 150

   35 statement: GOZINESH_KW ebarat onsor_mored default END_KW .

    $default  reduce using rule 35 (statement)


state 151

   25 ravie: RAVIE_KW SHENASE parameters LCB_KW declarations_list block RCB_KW . SEMICOLON_KW

    SEMICOLON_KW  shift, and go to state 159


state 152

   37 statement: SHENASE UPTO_KW ebarat DOWNTO_KW ASS_KW ebarat .
   73 ebarat_bool: ebarat . NAGHIZ_KW

    NAGHIZ_KW  shift, and go to state 96

    $default  reduce using rule 37 (statement)


state 153

   46 counter: ADADSABET UPTO ADADSABET .

    $default  reduce using rule 46 (counter)


state 154

   47 counter: ADADSABET DOWNTO ADADSABET .

    $default  reduce using rule 47 (counter)


state 155

   34 statement: FOR_KW SHENASE ASS_KW counter DO_KW statement .

    $default  reduce using rule 34 (statement)


state 156

   48 onsor_mored: MORED_KW ADADSABET COLON_KW block .

    $default  reduce using rule 48 (onsor_mored)


state 157

   49 onsor_mored: onsor_mored MORED_KW ADADSABET COLON_KW . block

    LCB_KW  shift, and go to state 25

    block  go to state 160


state 158

   50 default: DEFAULT_KW COLON_KW block .

    $default  reduce using rule 50 (default)


state 159

   25 ravie: RAVIE_KW SHENASE parameters LCB_KW declarations_list block RCB_KW SEMICOLON_KW .

    $default  reduce using rule 25 (ravie)


state 160

   49 onsor_mored: onsor_mored MORED_KW ADADSABET COLON_KW block .

    $default  reduce using rule 49 (onsor_mored)
